- name: Add provisioning directory for keeping state in
  file:
    path: "/etc/provisioning"
    state: directory
    mode: 0755
  become: true

- stat:
    path: "/etc/provisioning/earlystageconfigs"
  register: e
  become: true

- name: Set hostname
  hostname:
    name: "{{ vpc.hostname }}"
  when: e.stat.exists is defined and not e.stat.exists

- name: Disable bash history
  file:
    src: "/dev/null"
    dest: "/root/.bash_history"
    state: link
    force: true
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Disable zsh history
  file:
    src: "/dev/null"
    dest: "/root/.zsh_history"
    state: link
    force: true
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Force user-defined configs for apt
  template:
    src: "roles/earlystageconfigs/templates/forceuserdefinedconfigs.j2"
    dest: "/etc/apt/apt.conf.d/forceuserdefinedconfigs"
    owner: root
    group: root
    mode: 0644
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Install bashrc
  template:
    src: "roles/earlystageconfigs/templates/bashrc.j2"
    dest: "/root/.bashrc"
    owner: root
    group: root
    mode: 0644
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- stat: "path=/root/.ssh/id_rsa"
  register: sshkey
  become: true

- name: Generate ssh key for root user
  command: "ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa"
  when: sshkey.stat.exists == False
  become: true

- name: Copy the public key
  command: "cat /root/.ssh/id_rsa.pub"
  register: pubkey
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Install dirmngr
  apt: name=dirmngr
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Install apt-transport-https
  apt: name=apt-transport-https
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Install certbot
  apt: name=certbot
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Install certbot cloudflare plugin
  apt: name=python3-certbot-dns-cloudflare
  become: true
  when: e.stat.exists is defined and not e.stat.exists

- name: Create provisioning marker for this role
  file:
    path: "/etc/provisioning/earlystageconfigs"
    state: touch
    owner: root
    group: root
    mode: 0644
  become: true
#- name: Prompt the operator to copy the public key
#  pause:
#    prompt: "Please copy the following key and then add it to the private repository user \n\n{{ pubkey.stdout }}\n\nAfter copying the key, press [Enter]"
